// Code generated by MockGen. DO NOT EDIT.
// Source: repository/repository.go
//
// Generated by this command:
//
//	mockgen -source=repository/repository.go -destination=repository/repository.mock.gen.go -package=repository
//

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockBaseRepository is a mock of BaseRepository interface.
type MockBaseRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBaseRepositoryMockRecorder
}

// MockBaseRepositoryMockRecorder is the mock recorder for MockBaseRepository.
type MockBaseRepositoryMockRecorder struct {
	mock *MockBaseRepository
}

// NewMockBaseRepository creates a new mock instance.
func NewMockBaseRepository(ctrl *gomock.Controller) *MockBaseRepository {
	mock := &MockBaseRepository{ctrl: ctrl}
	mock.recorder = &MockBaseRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseRepository) EXPECT() *MockBaseRepositoryMockRecorder {
	return m.recorder
}

// BeginCommit mocks base method.
func (m *MockBaseRepository) BeginCommit(db *gorm.DB) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BeginCommit", db)
}

// BeginCommit indicates an expected call of BeginCommit.
func (mr *MockBaseRepositoryMockRecorder) BeginCommit(db any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginCommit", reflect.TypeOf((*MockBaseRepository)(nil).BeginCommit), db)
}

// BeginRollback mocks base method.
func (m *MockBaseRepository) BeginRollback(db *gorm.DB) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BeginRollback", db)
}

// BeginRollback indicates an expected call of BeginRollback.
func (mr *MockBaseRepositoryMockRecorder) BeginRollback(db any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginRollback", reflect.TypeOf((*MockBaseRepository)(nil).BeginRollback), db)
}

// GetBegin mocks base method.
func (m *MockBaseRepository) GetBegin() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBegin")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetBegin indicates an expected call of GetBegin.
func (mr *MockBaseRepositoryMockRecorder) GetBegin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBegin", reflect.TypeOf((*MockBaseRepository)(nil).GetBegin))
}

// GetDB mocks base method.
func (m *MockBaseRepository) GetDB() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockBaseRepositoryMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockBaseRepository)(nil).GetDB))
}
